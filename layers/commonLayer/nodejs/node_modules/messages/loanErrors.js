exports.spendingLimitOverflow = {
  message: 'You\'ve reached your spending limit. Repay any pending balance and try again.',
  errorCode: 10,
  errorDisplay: 'modal',
  statusCode: 400
}

exports.spendingLimitReached = (allowanceRemain) => {
  return {
    message: `You've reached your spending limit. Input amount under GBP ${(allowanceRemain / 100).toFixed(2)}.`,
    errorCode: 10,
    errorDisplay: 'modal',
    statusCode: 400
  }
}

exports.loanAmountMinMax = (min, max) => {
  return {
    message: 'Total amount must be between GBP ' + min + ' and GBP ' + max,
    errorCode: 0,
    errorDisplay: 'formErrorState',
    statusCode: 400
  }
}

exports.overduePaymentsPresent = {
  message: 'Looks like you\'ve got some overdue payments. Take care of them first before continuing shopping, please.',
  errorCode: 10,
  errorDisplay: 'modal',
  statusCode: 400
}

exports.repaymentAmountMinMax = (min, errorCode = 0) => {
  return {
    message: `Repayment amount must be greater than GBP ${(min / 100).toFixed(2)}`,
    errorCode,
    errorDisplay: 'formErrorState',
    statusCode: 400
  }
}

exports.loanCapReached = (loanCap) => {
  return {
    message: `Because we're getting to know you at this time ${loanCap} purchases is your cap allowance. Don't worry, we'll look to increase this for you.`,
    errorCode: 10,
    errorDisplay: 'modal',
    statusCode: 400
  }
}

exports.illegalRepaymentsNumber = (min, max) => {
  return {
    message: min === max ? `Because we're getting to know you at this time we can offer you to split your payment into ${min} installments. Don't worry, we'll look to increase this for you.` : `Number of installments must be between ${min} and ${max}.`,
    errorCode: 10,
    errorDisplay: 'modal',
    statusCode: 400
  }
}

exports.cantDetachCardWithActiveLoans = {
  message: 'Looks like you\'ve got some outstanding balances. Take care of them first before detaching your card.',
  errorCode: 10,
  errorDisplay: 'modal',
  statusCode: 400
}

exports.invalidTotal = (min, max) => {
  return {
    message: `Total amount must be between GBP ${(min / 100).toFixed(2)} and GBP ${(max / 100).toFixed(2)}`,
    errorCode: 10,
    errorDisplay: 'modal',
    statusCode: 400
  }
}

exports.paymentFailed = {
  message: 'There\'s been a problem with processing your payments💳 Check that you have enough cash to cover the first instalment🏛️ \nIf the issue persists after another try, contact our customer support and one of our busy bees will be with you within one working day🐝',
  errorCode: 86,
  errorDisplay: 'errorPage',
  statusCode: 500
}


exports.payoutFailed = {
  message: 'We\'ve encountered an error with making payment to the specified merchant. Please, contact support.',
  errorCode: 86, 
  errorDisplay: 'errorPage',
  statusCode: 500
}

exports.insufficientAllowance = (minTotal) => {
  return {
    message: `Your remaining spending allowance is under the minimum total amount purchase amount of GBP ${(minTotal / 100).toFixed(2)}. Take care of any outstanding balance and try again.`,
    errorCode: 86,
    errorDisplay: 'errorPage',
    statusCode: 400
  }
}

exports.noPaymentMethod = {
  message: 'We couldn\'t retrive your payment method information. Please, navigate to the payment method page in the settings menu, and add a primary payment method.',
  errorCode: 86,
  errorDisplay: 'errorPage',
  statusCode: 500
}

exports.cardActivationFailure = {
  message: 'We\'re verifying your documents for the time being, try again a few moments later! If the issue persists, please, contact support in the setting menu.',
  errorCode: 11,
  errorDisplay: 'modal',
  statusCode: 500
}

exports.softLocked = {
  message: 'Verification is usually completed in 72 hours, but may take longer. Thank you for your patience while we get this done!',
  errorCode: 11,
  errorDisplay: 'modal',
  statusCode: 500
}
